name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js for Backend
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'backend/package-lock.json'
    
    - name: Install Backend Dependencies
      run: |
        cd backend
        npm ci
    
    - name: Run Backend Tests
      run: |
        cd backend
        npm test
      env:
        MONGO_URI: ${{ secrets.MONGO_URI }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        PORT: ${{ secrets.PORT }}
    
    - name: Set up Node.js for Frontend
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'frontend/package-lock.json'
    
    - name: Install Frontend Dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Build Frontend
      run: |
        cd frontend
        export NODE_OPTIONS=--openssl-legacy-provider
        npm run build
    
    - name: Setup Backend Environment
      if: github.ref == 'refs/heads/main'
      run: |
        cd backend
        echo "MONGO_URI=${{ secrets.MONGO_URI }}" > .env
        echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
        echo "PORT=${{ secrets.PORT }}" >> .env
    
    - name: Setup Frontend Environment
      if: github.ref == 'refs/heads/main'
      run: |
        cd frontend
        echo "REACT_APP_API_URL=http://localhost:${{ secrets.PORT }}" > .env
        echo "REACT_APP_API_URL_PROD=https://your-backend-url.com" >> .env
    
    - name: Deploy Backend
      if: github.ref == 'refs/heads/main'
      run: |
        cd backend
        npm run build
        # Add your backend deployment commands here
        # For example, if using PM2:
        # npm install -g pm2
        # pm2 start server.js --name "task-manager-backend"
    
    - name: Deploy Frontend
      if: github.ref == 'refs/heads/main'
      run: |
        cd frontend
        npm run build
        # Add your frontend deployment commands here
        # For example, if using a static file server:
        # npm install -g serve
        # serve -s build 